package com.gmail.kirilllapitsky.consumer.controller;

import com.gmail.kirilllapitsky.consumer.dto.EmployeeDto;
import com.gmail.kirilllapitsky.consumer.dto.NewEmployeeDto;
import com.gmail.kirilllapitsky.consumer.service.employee.EmployeeService;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import lombok.RequiredArgsConstructor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/employee")
@RequiredArgsConstructor(onConstructor = @__(@Autowired))
public class EmployeeController {
    private final EmployeeService employeeService;

    @Operation(summary = "Save new employee with autogenerated state (added).")
    @ApiResponses(value = {
            @ApiResponse(responseCode = "200", description = "Employee successfully added."),
            @ApiResponse(responseCode = "500", description = "Some problems while saving employee.")})
    @PostMapping
    public void save(
            @io.swagger.v3.oas.annotations.parameters.RequestBody(description = "Employee entity should be saved.")
            @RequestBody NewEmployeeDto employee) throws Exception {
        employeeService.save(employee);
    }

    @Operation(summary = "Get employee entity.")
    @ApiResponses(value = {
            @ApiResponse(responseCode = "200", description = "Employee found. Returns employee entity dto."),
            @ApiResponse(responseCode = "500", description = "Some problems while finding employee.")})
    @GetMapping("/{employeeId}")
    public EmployeeDto getEmployee(
            @Parameter(required = true, description = "Id of employee that needs to get.")
            @PathVariable Long employeeId) {
        return employeeService.getEmployeeById(employeeId);
    }
}
